name: CI/CD Pipeline

on:
  push:
    branches:
      - staging
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: .next/

  test:
    name: Run Frontend Tests with Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Frontend Tests with Coverage
        run: npm run test -- --coverage

  deploy:
    name: Deploy to Vercel Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Vercel CLI
        run: |
          curl -fsSL https://vercel.com/download -o vercel-linux.tar.gz
          tar -xvzf vercel-linux.tar.gz
          sudo mv vercel /usr/local/bin

      - name: Deploy to Vercel
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --confirm --env NODE_ENV=${{ secrets.NODE_ENV }}